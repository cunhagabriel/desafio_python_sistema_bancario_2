import textwrap


def opcoes():
    opcoes = '''
    ###########################################
    BEM VINDO! Qual operação deseja realizar?

    [d] Para Depositar           | [s] Para Sacar
    [e] Para ver o extrato       | [cn] Para Criar Nova Conta
    [un] Para Criar Novo Usuário | [q] Para sair


     SISTEMA BANCÁRIO - 2023 - V2.0.0
    ###########################################
    => '''
    return input(textwrap.dedent(opcoes))


def depositar(saldo, valor, extrato, /):
    if valor > 0:
        
        saldo += valor
        
        extrato += f"Depósito:\tR$ {valor:.2f}\n"
        
        print("Depósito realizado!")
    else:
        print("Falha na operação! Valor inválido")

    return saldo, extrato


def sacar(*, saldo, valor, extrato, limite, numero_saques, limite_saques):
    excedeu_saldo = valor > saldo
    
    excedeu_limite = valor > limite
    
    excedeu_saques = numero_saques >= limite_saques

    if excedeu_saldo:
        print("Falha na operação! Saldo insuficiente.")

    elif excedeu_limite:
        print("Limite atingido!")

    elif excedeu_saques:
        print("Limite de saques atingido!")

    elif valor > 0:
        saldo -= valor
        extrato += f"Saque:\t\tR$ {valor:.2f}\n"
        numero_saques += 1
        print("Saque realizado!")

    else:
        print("Falha na operação! Valor inválido.")

    return saldo, extrato


def exibir_extrato(saldo, /, *, extrato):
    print("\n############ SEU EXTRATO ###########")
    print("Não houveram movimentações na conta." if not extrato else extrato)
    print(f"\nSaldo:\t\tR$ {saldo:.2f}")
    print("######################################")


def novo_usuario(usuarios):
    cpf = input("Informe o CPF limpo(sem espaços e caracteres): ")
    usuario = verificar_usuario(cpf, usuarios)

    if usuario:
        print("CPF já cadastrado no sistema!")
        return

    nome = input("Digite o seu nome completo: ")
    data_nascimento = input("Qual a sua data de nascimento (dd-mm-aaaa): ")
    endereco = input("Qual o seu endereço (Rua, Nº - Bairro - Cidade/Estado (ex: SP): ")

    usuarios.append({"nome": nome, "data_nascimento": data_nascimento, "cpf": cpf, "endereco": endereco})

    print("Usuário cadastrado!")
    return


def verificar_usuario(cpf, usuarios):
    verificados = [usuario for usuario in usuarios if usuario["cpf"] == cpf]
    return verificados[0] if verificados else None


def criar_conta(agencia, numero_conta, usuarios):
    cpf = input("Informe o CPF do usuário: ")
    usuario = verificar_usuario(cpf, usuarios)

    if usuario:
        print("\n=== Conta criada com sucesso! ===")
        return {"agencia": agencia, "numero_conta": numero_conta, "usuario": usuario}

    print("Usuário não cadastrado!")
    return

def main():
    LIMITE_SAQUES = 3
    AGENCIA = "0001"

    saldo = 0
    limite = 500
    extrato = ""
    numero_saques = 0
    usuarios = []
    contas = []

    while True:
        opcao = opcoes()

        if opcao == "d":
            valor = float(input("Quanto deseja depositar?:"))

            saldo, extrato = depositar(saldo, valor, extrato)

        elif opcao == "s":
            valor = float(input("Quanto deseja sacar?:"))

            saldo, extrato = sacar(
                saldo=saldo,
                valor=valor,
                extrato=extrato,
                limite=limite,
                numero_saques=numero_saques,
                limite_saques=LIMITE_SAQUES,
            )

        elif opcao == "e":
            exibir_extrato(saldo, extrato=extrato)

        elif opcao == "un":
            novo_usuario(usuarios)

        elif opcao == "cn":
            numero_conta = len(contas) + 1
            conta = criar_conta(AGENCIA, numero_conta, usuarios)

            if conta:
                contas.append(conta)

        elif opcao == "q":
            print("Tenha um bom dia/boa tarde/boa noite!")
        break
    
    else:
        print("Operação inválida, selecione outra opção.")


main()
